# # find if is bootstraped

# - name: check status of nomad server
#   ansible.builtin.uri:
#     url: https://vault.devcastops.com:8200/v1/sys/health
#     return_content: true
#     status_code: [200,501]
#   register: health

# bootstrap nomad

- name: nomad status
  shell:
    cmd: nomad status -address={{ nomad_addr }}
  retries: 5
  register: status
  failed_when: status.rc == 1 and "connection refused" in status.stderr

- name: init nomad
  # no_log: true
  shell:
    cmd: nomad acl bootstrap -json -address={{ nomad_addr }}
  register: init
  ignore_errors: true

- name: error handleing
  debug: "bootstrapping failed with unexpected error code with message. stderr: {{ init.stderr }} stdout: {{ init.stdout }}"
  when: init.rc == 1 and "ACL bootstrap already done" not in init.stderr

# upload tokens in to vault secrets

- name: init hcp
  delegate_to: localhost
  environment:
    HCP_CLIENT_SECRET: "{{ HCP_CLIENT_SECRET }}"
    HCP_CLIENT_ID: "{{ HCP_CLIENT_ID }}"
  shell:
    cmd: "hcp profile set organization_id {{ organization_id }}; hcp profile set project_id {{ project_id }}"
  when: not initialized

- name: remove old bootstrap
  delegate_to: localhost
  no_log: false
  environment:
    HCP_CLIENT_SECRET: "{{ HCP_CLIENT_SECRET }}"
    HCP_CLIENT_ID: "{{ HCP_CLIENT_ID }}"
  shell:
    cmd: "hcp vault-secrets secrets delete NOMAD_TOKEN --app={{ secret_app }}"
  ignore_errors: true
  when: not initialized

- name: store bootstrap
  delegate_to: localhost
  no_log: false
  environment:
    HCP_CLIENT_SECRET: "{{ HCP_CLIENT_SECRET }}"
    HCP_CLIENT_ID: "{{ HCP_CLIENT_ID }}"
  shell:
    cmd: "echo -n {{bootstap_token}} | hcp vault-secrets secrets create NOMAD_TOKEN --data-file=- --app={{ secret_app }} --format=json"
  when: not initialized
